//2020.09



//【UNSOLVED】

/*Given a string, if the string begins with "red" or "blue" return that color string, otherwise return the empty string.
*
*
*seeColor("redxx") → "red"
*seeColor("xxred") → ""
*seeColor("blueTimes") → "blue"*/

public String seeColor(String str) {

  if (str.length()<3){
    return "";
  }
  else if (str.substring(0,3).equals("red")){
    return "red";
  }
  else if (str.length()<4){
    return "";
  }
  else if (str.substring(0,4).equals("blue")){
    return "blue";
  }
  else{
    return "";
  }
}

/*
*Given a string, return a version without the first 2 chars. Except keep the first char if it is 'a' and keep the second char if it is 'b'. The string may be any length. Harder than it looks.
*
*
*deFront("Hello") → "llo"
*deFront("java") → "va"
*deFront("away") → "aay"
*/
public String deFront(String str) {    
String a="",b="",c="";
  if (str.length()==0||str.length()==1&&!str.substring(0,1).equals("a")){
  }
  else{
    if (str.length()>=2){
      c=str.substring(2);
    }
    if (str.length()>=1&&str.substring(0,1).equals("a")){
      a="a";
    }
    if (str.length()>=2&&str.substring(1,2).equals("b")){
      b="b";
    }

  }
  return a+b+c;
}


//【SOLVED】



/*【【】】
*
*Given a string, if the first or last chars are 'x', return the string without those 'x' chars, and otherwise return the string unchanged.
*
*
*withoutX("xHix") → "Hi"
*withoutX("xHi") → "Hi"
*withoutX("Hxix") → "Hxi"
*/
public String withoutX(String str) {
  if (str.length() > 0 && str.charAt(0) == 'x') {
    str = str.substring(1);
  }

  if (str.length() > 0 && str.charAt(str.length()-1) == 'x') {
    str = str.substring(0, str.length()-1);
  }
  
  return str;
  
  // Solution  notes: check for the 'x' in both spots. If found, use substring()
  // to grab the part without the 'x'. Check that the length is greater than 0
  // each time -- the need for the second length check is tricky to see.
  // One could .substring() instead of .charAt() to look into the string.
}
